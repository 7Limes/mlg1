# Generated from mlg1.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,27,185,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,
        1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,
        10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,
        12,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,
        18,1,18,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,
        21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
        21,1,21,1,21,1,21,1,21,1,21,3,21,143,8,21,1,22,1,22,1,22,1,22,1,
        22,1,22,1,22,1,22,1,22,3,22,154,8,22,1,23,1,23,5,23,158,8,23,10,
        23,12,23,161,9,23,1,24,4,24,164,8,24,11,24,12,24,165,1,25,1,25,1,
        25,1,25,5,25,172,8,25,10,25,12,25,175,9,25,1,25,1,25,1,26,4,26,180,
        8,26,11,26,12,26,181,1,26,1,26,0,0,27,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,1,0,5,3,0,
        65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,10,
        10,13,13,3,0,9,10,13,13,32,32,192,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
        0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,
        0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,
        0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
        0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,1,55,1,0,
        0,0,3,57,1,0,0,0,5,64,1,0,0,0,7,67,1,0,0,0,9,69,1,0,0,0,11,71,1,
        0,0,0,13,73,1,0,0,0,15,75,1,0,0,0,17,77,1,0,0,0,19,79,1,0,0,0,21,
        82,1,0,0,0,23,87,1,0,0,0,25,93,1,0,0,0,27,100,1,0,0,0,29,102,1,0,
        0,0,31,104,1,0,0,0,33,106,1,0,0,0,35,108,1,0,0,0,37,110,1,0,0,0,
        39,112,1,0,0,0,41,114,1,0,0,0,43,142,1,0,0,0,45,153,1,0,0,0,47,155,
        1,0,0,0,49,163,1,0,0,0,51,167,1,0,0,0,53,179,1,0,0,0,55,56,5,35,
        0,0,56,2,1,0,0,0,57,58,5,100,0,0,58,59,5,101,0,0,59,60,5,102,0,0,
        60,61,5,105,0,0,61,62,5,110,0,0,62,63,5,101,0,0,63,4,1,0,0,0,64,
        65,5,102,0,0,65,66,5,110,0,0,66,6,1,0,0,0,67,68,5,40,0,0,68,8,1,
        0,0,0,69,70,5,41,0,0,70,10,1,0,0,0,71,72,5,44,0,0,72,12,1,0,0,0,
        73,74,5,123,0,0,74,14,1,0,0,0,75,76,5,125,0,0,76,16,1,0,0,0,77,78,
        5,61,0,0,78,18,1,0,0,0,79,80,5,105,0,0,80,81,5,102,0,0,81,20,1,0,
        0,0,82,83,5,101,0,0,83,84,5,108,0,0,84,85,5,115,0,0,85,86,5,101,
        0,0,86,22,1,0,0,0,87,88,5,119,0,0,88,89,5,104,0,0,89,90,5,105,0,
        0,90,91,5,108,0,0,91,92,5,101,0,0,92,24,1,0,0,0,93,94,5,114,0,0,
        94,95,5,101,0,0,95,96,5,116,0,0,96,97,5,117,0,0,97,98,5,114,0,0,
        98,99,5,110,0,0,99,26,1,0,0,0,100,101,5,45,0,0,101,28,1,0,0,0,102,
        103,5,33,0,0,103,30,1,0,0,0,104,105,5,43,0,0,105,32,1,0,0,0,106,
        107,5,42,0,0,107,34,1,0,0,0,108,109,5,47,0,0,109,36,1,0,0,0,110,
        111,5,37,0,0,111,38,1,0,0,0,112,113,5,60,0,0,113,40,1,0,0,0,114,
        115,5,61,0,0,115,116,5,61,0,0,116,42,1,0,0,0,117,118,5,119,0,0,118,
        119,5,105,0,0,119,120,5,100,0,0,120,121,5,116,0,0,121,143,5,104,
        0,0,122,123,5,104,0,0,123,124,5,101,0,0,124,125,5,105,0,0,125,126,
        5,103,0,0,126,127,5,104,0,0,127,143,5,116,0,0,128,129,5,109,0,0,
        129,130,5,101,0,0,130,131,5,109,0,0,131,132,5,111,0,0,132,133,5,
        114,0,0,133,143,5,121,0,0,134,135,5,116,0,0,135,136,5,105,0,0,136,
        137,5,99,0,0,137,138,5,107,0,0,138,139,5,114,0,0,139,140,5,97,0,
        0,140,141,5,116,0,0,141,143,5,101,0,0,142,117,1,0,0,0,142,122,1,
        0,0,0,142,128,1,0,0,0,142,134,1,0,0,0,143,44,1,0,0,0,144,145,5,108,
        0,0,145,146,5,101,0,0,146,154,5,116,0,0,147,148,5,103,0,0,148,149,
        5,108,0,0,149,150,5,111,0,0,150,151,5,98,0,0,151,152,5,97,0,0,152,
        154,5,108,0,0,153,144,1,0,0,0,153,147,1,0,0,0,154,46,1,0,0,0,155,
        159,7,0,0,0,156,158,7,1,0,0,157,156,1,0,0,0,158,161,1,0,0,0,159,
        157,1,0,0,0,159,160,1,0,0,0,160,48,1,0,0,0,161,159,1,0,0,0,162,164,
        7,2,0,0,163,162,1,0,0,0,164,165,1,0,0,0,165,163,1,0,0,0,165,166,
        1,0,0,0,166,50,1,0,0,0,167,168,5,47,0,0,168,169,5,47,0,0,169,173,
        1,0,0,0,170,172,8,3,0,0,171,170,1,0,0,0,172,175,1,0,0,0,173,171,
        1,0,0,0,173,174,1,0,0,0,174,176,1,0,0,0,175,173,1,0,0,0,176,177,
        6,25,0,0,177,52,1,0,0,0,178,180,7,4,0,0,179,178,1,0,0,0,180,181,
        1,0,0,0,181,179,1,0,0,0,181,182,1,0,0,0,182,183,1,0,0,0,183,184,
        6,26,0,0,184,54,1,0,0,0,7,0,142,153,159,165,173,181,1,6,0,0
    ]

class mlg1Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    META_VARIABLE_NAME = 22
    VARIABLE_KEYWORD = 23
    NAME = 24
    INTEGER = 25
    LINE_COMMENT = 26
    WS = 27

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#'", "'define'", "'fn'", "'('", "')'", "','", "'{'", "'}'", 
            "'='", "'if'", "'else'", "'while'", "'return'", "'-'", "'!'", 
            "'+'", "'*'", "'/'", "'%'", "'<'", "'=='" ]

    symbolicNames = [ "<INVALID>",
            "META_VARIABLE_NAME", "VARIABLE_KEYWORD", "NAME", "INTEGER", 
            "LINE_COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "META_VARIABLE_NAME", "VARIABLE_KEYWORD", "NAME", 
                  "INTEGER", "LINE_COMMENT", "WS" ]

    grammarFileName = "mlg1.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


