#width 500
#height 500
#tickrate 60
#memory 500


define SCALE 100

define PLAYER_WIDTH 1000
define PLAYER_HEIGHT 2000
define PLAYER_ACCEL 50
define PLAYER_MAX_VELOCITY_X 300
define PLAYER_MAX_VELOCITY_Y 500
define PLAYER_FRICTION 100

define GRAVITY 10


fn clamp(x, lower, upper) {
    if x < lower {
        return lower
    }
    if !(x < upper) {
        return upper
    }
    return x
}


fn start() {
    global player_x = 5000
    global player_y = 5000
    global player_vx = 0
    global player_vy = 0
}


fn input() {
    if LEFT + RIGHT {
        player_vx = player_vx + (-LEFT + RIGHT) * PLAYER_ACCEL
        player_vx = clamp(player_vx, -PLAYER_MAX_VELOCITY_X, PLAYER_MAX_VELOCITY_X)
    }
    else {  // Not pressing left or right
        let new_vx = player_vx - (2 * !(player_vx < 0) - 1) * PLAYER_FRICTION
        if !(0 < new_vx * player_vx) {  // If the sign of player_vx will change
            player_vx = 0
        }
        else {
            player_vx = new_vx
        }
    }
}


fn move_player() {
    player_vy = clamp(player_vy + GRAVITY, -PLAYER_MAX_VELOCITY_Y, PLAYER_MAX_VELOCITY_Y)

    player_x = player_x + player_vx
    player_y = player_y + player_vy
}


fn draw_player() {
    color(255, 0, 0)
    rect(player_x / SCALE, player_y / SCALE, PLAYER_WIDTH / SCALE, PLAYER_HEIGHT / SCALE)
}


fn tick() {
    input()
    move_player()

    color(0, 0, 0)
    rect(0, 0, WIDTH, HEIGHT)
    draw_player()
}