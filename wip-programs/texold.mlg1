#width 500
#height 500
#memory 8192

fn draw_texture(address, x, y) {
    let twidth = get(address)
    let theight = get(address+1)
    let area = twidth*theight

    address = address + 2
    let i = 0
    while i < area {
        let pixel_data = get(address+i)
        let r = pixel_data % 256
        pixel_data = pixel_data / 256
        let g = pixel_data % 256
        pixel_data = pixel_data /256
        let b = pixel_data % 256

        color(r, g, b)
        point(i % twidth + x, i / theight + y)

        i = i + 1
    }
}

fn draw_texture_region(address, x, y, rx, ry, rwidth, rheight) {
    let twidth = get(address)

    let pixel_pointer = address + 2 + ry * twidth + rx

    let region_area = rwidth * rheight
    let width_minus_rwidth = twidth - rwidth

    let i = 0
    while i < region_area {
        if !(i == 0) * (i % rwidth == 0) {
            pixel_pointer = pixel_pointer + width_minus_rwidth
        }

        let pixel_data = get(pixel_pointer)
        let r = pixel_data % 256
        pixel_data = pixel_data / 256
        let g = pixel_data % 256
        pixel_data = pixel_data / 256
        let b = pixel_data % 256

        if !((r == 1) * (g == 1) * (b == 1)) {
            let pixel_x = i % rwidth + x
            let pixel_y = i / rheight + y
            color(r, g, b)
            point(pixel_x, pixel_y)
        }

        pixel_pointer = pixel_pointer + 1
        i = i + 1
    }
}

fn draw_text(string_address, string_length, font_address, font_size, x, y) {
    let char_counter = 0
    let cursor_x_position = x

    let i = 0
    while i < string_length {
        let char_pointer = string_address + char_counter
        let char_x_position = (get(char_pointer) - 32) * font_size
        draw_texture_region(font_address, cursor_x_position, y, char_x_position, 0, font_size, font_size)
        cursor_x_position = cursor_x_position + font_size + 1
        i = i + 1
    }
}


fn start() {
    draw_texture(200, 10, 10)
    // draw_text(200, 22, 250, 8, 10, 10)
}