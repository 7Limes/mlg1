# Generated from mlg1.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,40,272,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,
        2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,
        7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,
        14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,
        16,1,16,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,
        19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,
        21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,
        27,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,
        32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
        33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
        33,3,33,217,8,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,3,
        34,228,8,34,1,35,1,35,5,35,232,8,35,10,35,12,35,235,9,35,1,36,4,
        36,238,8,36,11,36,12,36,239,1,37,1,37,1,37,5,37,245,8,37,10,37,12,
        37,248,9,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,39,5,39,259,
        8,39,10,39,12,39,262,9,39,1,39,1,39,1,40,4,40,267,8,40,11,40,12,
        40,268,1,40,1,40,0,0,41,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
        19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
        41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,
        63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,0,79,39,81,40,1,0,7,
        3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,4,
        0,10,10,13,13,34,34,92,92,8,0,34,34,47,47,92,92,98,98,102,102,110,
        110,114,114,116,116,2,0,10,10,13,13,3,0,9,10,13,13,32,32,280,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
        0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
        0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,
        0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,
        0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
        0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,1,83,1,0,
        0,0,3,85,1,0,0,0,5,93,1,0,0,0,7,95,1,0,0,0,9,102,1,0,0,0,11,105,
        1,0,0,0,13,107,1,0,0,0,15,109,1,0,0,0,17,111,1,0,0,0,19,113,1,0,
        0,0,21,115,1,0,0,0,23,117,1,0,0,0,25,119,1,0,0,0,27,121,1,0,0,0,
        29,124,1,0,0,0,31,129,1,0,0,0,33,135,1,0,0,0,35,139,1,0,0,0,37,141,
        1,0,0,0,39,148,1,0,0,0,41,154,1,0,0,0,43,163,1,0,0,0,45,165,1,0,
        0,0,47,167,1,0,0,0,49,169,1,0,0,0,51,171,1,0,0,0,53,173,1,0,0,0,
        55,175,1,0,0,0,57,177,1,0,0,0,59,179,1,0,0,0,61,182,1,0,0,0,63,185,
        1,0,0,0,65,188,1,0,0,0,67,216,1,0,0,0,69,227,1,0,0,0,71,229,1,0,
        0,0,73,237,1,0,0,0,75,241,1,0,0,0,77,251,1,0,0,0,79,254,1,0,0,0,
        81,266,1,0,0,0,83,84,5,35,0,0,84,2,1,0,0,0,85,86,5,105,0,0,86,87,
        5,110,0,0,87,88,5,99,0,0,88,89,5,108,0,0,89,90,5,117,0,0,90,91,5,
        100,0,0,91,92,5,101,0,0,92,4,1,0,0,0,93,94,5,36,0,0,94,6,1,0,0,0,
        95,96,5,100,0,0,96,97,5,101,0,0,97,98,5,102,0,0,98,99,5,105,0,0,
        99,100,5,110,0,0,100,101,5,101,0,0,101,8,1,0,0,0,102,103,5,102,0,
        0,103,104,5,110,0,0,104,10,1,0,0,0,105,106,5,40,0,0,106,12,1,0,0,
        0,107,108,5,41,0,0,108,14,1,0,0,0,109,110,5,44,0,0,110,16,1,0,0,
        0,111,112,5,123,0,0,112,18,1,0,0,0,113,114,5,125,0,0,114,20,1,0,
        0,0,115,116,5,61,0,0,116,22,1,0,0,0,117,118,5,91,0,0,118,24,1,0,
        0,0,119,120,5,93,0,0,120,26,1,0,0,0,121,122,5,105,0,0,122,123,5,
        102,0,0,123,28,1,0,0,0,124,125,5,101,0,0,125,126,5,108,0,0,126,127,
        5,115,0,0,127,128,5,101,0,0,128,30,1,0,0,0,129,130,5,119,0,0,130,
        131,5,104,0,0,131,132,5,105,0,0,132,133,5,108,0,0,133,134,5,101,
        0,0,134,32,1,0,0,0,135,136,5,102,0,0,136,137,5,111,0,0,137,138,5,
        114,0,0,138,34,1,0,0,0,139,140,5,59,0,0,140,36,1,0,0,0,141,142,5,
        114,0,0,142,143,5,101,0,0,143,144,5,116,0,0,144,145,5,117,0,0,145,
        146,5,114,0,0,146,147,5,110,0,0,147,38,1,0,0,0,148,149,5,98,0,0,
        149,150,5,114,0,0,150,151,5,101,0,0,151,152,5,97,0,0,152,153,5,107,
        0,0,153,40,1,0,0,0,154,155,5,99,0,0,155,156,5,111,0,0,156,157,5,
        110,0,0,157,158,5,116,0,0,158,159,5,105,0,0,159,160,5,110,0,0,160,
        161,5,117,0,0,161,162,5,101,0,0,162,42,1,0,0,0,163,164,5,45,0,0,
        164,44,1,0,0,0,165,166,5,33,0,0,166,46,1,0,0,0,167,168,5,43,0,0,
        168,48,1,0,0,0,169,170,5,42,0,0,170,50,1,0,0,0,171,172,5,47,0,0,
        172,52,1,0,0,0,173,174,5,37,0,0,174,54,1,0,0,0,175,176,5,60,0,0,
        176,56,1,0,0,0,177,178,5,62,0,0,178,58,1,0,0,0,179,180,5,60,0,0,
        180,181,5,61,0,0,181,60,1,0,0,0,182,183,5,62,0,0,183,184,5,61,0,
        0,184,62,1,0,0,0,185,186,5,61,0,0,186,187,5,61,0,0,187,64,1,0,0,
        0,188,189,5,33,0,0,189,190,5,61,0,0,190,66,1,0,0,0,191,192,5,119,
        0,0,192,193,5,105,0,0,193,194,5,100,0,0,194,195,5,116,0,0,195,217,
        5,104,0,0,196,197,5,104,0,0,197,198,5,101,0,0,198,199,5,105,0,0,
        199,200,5,103,0,0,200,201,5,104,0,0,201,217,5,116,0,0,202,203,5,
        109,0,0,203,204,5,101,0,0,204,205,5,109,0,0,205,206,5,111,0,0,206,
        207,5,114,0,0,207,217,5,121,0,0,208,209,5,116,0,0,209,210,5,105,
        0,0,210,211,5,99,0,0,211,212,5,107,0,0,212,213,5,114,0,0,213,214,
        5,97,0,0,214,215,5,116,0,0,215,217,5,101,0,0,216,191,1,0,0,0,216,
        196,1,0,0,0,216,202,1,0,0,0,216,208,1,0,0,0,217,68,1,0,0,0,218,219,
        5,108,0,0,219,220,5,101,0,0,220,228,5,116,0,0,221,222,5,103,0,0,
        222,223,5,108,0,0,223,224,5,111,0,0,224,225,5,98,0,0,225,226,5,97,
        0,0,226,228,5,108,0,0,227,218,1,0,0,0,227,221,1,0,0,0,228,70,1,0,
        0,0,229,233,7,0,0,0,230,232,7,1,0,0,231,230,1,0,0,0,232,235,1,0,
        0,0,233,231,1,0,0,0,233,234,1,0,0,0,234,72,1,0,0,0,235,233,1,0,0,
        0,236,238,7,2,0,0,237,236,1,0,0,0,238,239,1,0,0,0,239,237,1,0,0,
        0,239,240,1,0,0,0,240,74,1,0,0,0,241,246,5,34,0,0,242,245,3,77,38,
        0,243,245,8,3,0,0,244,242,1,0,0,0,244,243,1,0,0,0,245,248,1,0,0,
        0,246,244,1,0,0,0,246,247,1,0,0,0,247,249,1,0,0,0,248,246,1,0,0,
        0,249,250,5,34,0,0,250,76,1,0,0,0,251,252,5,92,0,0,252,253,7,4,0,
        0,253,78,1,0,0,0,254,255,5,47,0,0,255,256,5,47,0,0,256,260,1,0,0,
        0,257,259,8,5,0,0,258,257,1,0,0,0,259,262,1,0,0,0,260,258,1,0,0,
        0,260,261,1,0,0,0,261,263,1,0,0,0,262,260,1,0,0,0,263,264,6,39,0,
        0,264,80,1,0,0,0,265,267,7,6,0,0,266,265,1,0,0,0,267,268,1,0,0,0,
        268,266,1,0,0,0,268,269,1,0,0,0,269,270,1,0,0,0,270,271,6,40,0,0,
        271,82,1,0,0,0,9,0,216,227,233,239,244,246,260,268,1,6,0,0
    ]

class mlg1Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    META_VARIABLE_NAME = 34
    VARIABLE_KEYWORD = 35
    NAME = 36
    INTEGER = 37
    STRING = 38
    LINE_COMMENT = 39
    WS = 40

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#'", "'include'", "'$'", "'define'", "'fn'", "'('", "')'", 
            "','", "'{'", "'}'", "'='", "'['", "']'", "'if'", "'else'", 
            "'while'", "'for'", "';'", "'return'", "'break'", "'continue'", 
            "'-'", "'!'", "'+'", "'*'", "'/'", "'%'", "'<'", "'>'", "'<='", 
            "'>='", "'=='", "'!='" ]

    symbolicNames = [ "<INVALID>",
            "META_VARIABLE_NAME", "VARIABLE_KEYWORD", "NAME", "INTEGER", 
            "STRING", "LINE_COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "META_VARIABLE_NAME", "VARIABLE_KEYWORD", "NAME", 
                  "INTEGER", "STRING", "ESC", "LINE_COMMENT", "WS" ]

    grammarFileName = "mlg1.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


